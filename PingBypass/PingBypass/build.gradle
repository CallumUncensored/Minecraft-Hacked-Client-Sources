buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven {
            name = "jitpack.io"
            url = "https://jitpack.io"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'


version = '1.0.0'
group = 'me.earth'
archivesBaseName = 'pingbypass'

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = '1.12.2-14.23.5.2768'
    runDir = 'run'
    mappings = 'stable_39'
    coreMod = 'me.earth.pingbypass.mixin.Core'
    makeObfSourceJar = false
}

repositories {
    mavenCentral()
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/maven/'
    }
    jcenter()
}

dependencies {
    implementation 'com.github.steveice10:MCProtocolLib:1.12.2-2'
    compile 'com.github.steveice10:packetlib:1.2'
    compile 'com.github.steveice10:opennbt:1.3'
    compile 'com.github.steveice10:mcauthlib:1.0'

    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
}

task getDeps(type: Copy) {
    from sourceSets.main.runtimeClasspath
    into 'runtime/'
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}

shadowJar {
    dependencies {
        include(dependency('com.github.steveice10:MCProtocolLib:1.12.2-2'))
        include(dependency('com.github.steveice10:packetlib:1.2'))
        include(dependency('com.github.steveice10:opennbt:1.3'))
        include(dependency('com.github.steveice10:mcauthlib:1.0'))
        include(dependency('org.spongepowered:mixin'))
    }

    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'release'
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'mixins.pingbypass.refmap.json'
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

jar {
    manifest {
        attributes(
                'MixinConfigs': 'mixins.pingbypass.json',
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': 'me.earth.pingbypass.mixin.Core',
                'ForceLoadAsMod': 'true'
        )
    }
}

build.dependsOn(shadowJar)

